# Sexy Solarized Bash Prompt, inspired by "Extravagant Zsh Prompt"
# Customized for the Solarized color scheme by Sean O'Neil

if [[ $COLORTERM = gnome-* && $TERM = xterm ]]  && infocmp gnome-256color >/dev/null 2>&1; then TERM=gnome-256color; fi
if tput setaf 1 &> /dev/null; then
    tput sgr0
    if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
      BASE00=$(tput setaf 241)
      BASE01=$(tput setaf 240)
      BASE02=$(tput setaf 235)
      BASE03=$(tput setaf 234)
      BASE0=$(tput setaf 244)
      BASE1=$(tput setaf 245)
      BASE2=$(tput setaf 254)
      BASE3=$(tput setaf 230)
      RED=$(tput setaf 160)
      ORANGE=$(tput setaf 166)
      YELLOW=$(tput setaf 136)
      GREEN=$(tput setaf 64)
      BLUE=$(tput setaf 33)
      CYAN=$(tput setaf 37)
      MAGENTA=$(tput setaf 125)
      VIOLET=$(tput setaf 61)
    else
      BASE00=$(tput setaf 11)
      BASE01=$(tput setaf 10)
      BASE02=$(tput setaf 0)
      BASE03=$(tput setaf 8)
      BASE0=$(tput setaf 12)
      BASE1=$(tput setaf 14)
      BASE2=$(tput setaf 7)
      BASE3=$(tput setaf 15)
      RED=$(tput setaf 1)
      ORANGE=$(tput setaf 9)
      YELLOW=$(tput setaf 3)
      GREEN=$(tput setaf 2)
      CYAN=$(tput setaf 6)
      BLUE=$(tput setaf 4)
      MAGENTA=$(tput setaf 5)
      VIOLET=$(tput setaf 13)
    fi
    BOLD=$(tput bold)
    RESET=$(tput sgr0)
else
    # Linux console colors. I don't have the energy
    # to figure out the Solarized values
    MAGENTA="\033[1;31m"
    ORANGE="\033[1;33m"
    GREEN="\033[1;32m"
    PURPLE="\033[1;35m"
    WHITE="\033[1;37m"
    BOLD=""
    RESET="\033[m"
fi

parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}
parse_git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

PS1="\[${BOLD}${GREEN}\]\u\[$ORANGE\]@\[$GREEN\]\h \[${BOLD}${ORANGE}(\t${RESET}\],\[${BOLD}${ORANGE}\!${RESET}\],\[${BOLD}${ORANGE}\#)${RESET}\] \[${BOLD}${BASE0}\]in \[$BLUE\]\w\[$BASE0\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$YELLOW\]\$(parse_git_branch)\[$BASE0\]\n\$ \[$RESET\]"
