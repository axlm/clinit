-module($MODULENAME).
-behaviour(supervisor).
-export([]).
-export([init/1]).



%% API ============================================================= %



%% Behaviour ======================================================= %
-define(CHILD(I, M, T, A), {I, {M, start_link, A}, permanent, 5000, T, [M]}).

%% init/1
%% -------------------------------------------------------------------
%% @doc <a href="http://goo.gl/tjykNo">supervisor:init/1</a>
-spec(init(Args :: term())
      -> Result when
      Result :: {ok, {SupervisionPolicy, [ChildSpec]}} | ignore,
      SupervisionPolicy :: {
        RestartStrategy,
        MaxR :: non_neg_integer(),
        MaxT :: pos_integer()},
      RestartStrategy :: one_for_all
      | one_for_one
      | rest_for_one
      | simple_one_for_one,
      ChildSpec :: {
        Id :: term(),
        StartFunc,
        RestartPolicy,
        Type :: worker | supervisor,
        Modules},
      StartFunc :: {
        M :: module(),
        F :: atom(),
        A :: [term()] | undefined},
      RestartPolicy :: permanent | transient | temporary,
      Modules :: [module()] | dynamic).
%% ----------------------------------------------------------------- %
init([]) ->
    Child = ?CHILD('Id', 'Module', worker, []), {ok, {{one_for_all, 0, 1}, [Child]}}.


%% Private ========================================================= %

