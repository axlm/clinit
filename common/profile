#!/bin/bash
# System-wide enironment variables, paths and functions for the current logged
# in user. To modify behaviour for all users, modify /etc/profile.

## VARIABLES ###################################################################
## SYSTEM VARIABLES ------------------------------------------------------------
EDITOR=/usr/bin/vim; export EDITOR
VISUAL=/usr/bin/vim; export VISUAL
PAGER=/usr/bin/less; export PAGER

# FUNCTIONS ####################################################################
## PATH MANIPULATION FUNCTIONS -------------------------------------------------

# Remove a sub-path from a path.
# ${2} the name of the path variable to be modified (default: PATH)
pathremove () {
    local IFS=':'
    local NEWPATH
    local DIR
    local PATHVARIABLE=${2:-PATH}
    for DIR in ${!PATHVARIABLE}; do
        if [ "$DIR" != "$1" ]; then
            NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
        fi
    done
    export $PATHVARIABLE="$NEWPATH"
}

# Add a path at the beginning of another path.
# ${2} the name of the path variable to be modified (default: PATH)
pathprepend () {
    pathremove $1 $2
    local PATHVARIABLE=${2:-PATH}
    export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
}

# Add a path at the end of another path.
# ${2} the name of the path variable to be modified (default: PATH)
pathappend () {
    pathremove $1 $2
    local PATHVARIABLE=${2:-PATH}
    export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
}

export pathremove pathprepend pathappend

## LOGGER FUNCTIONS ------------------------------------------------------------

# Get the current base file name.
# ${1} - the file to get the base name of
__pcfn () {
    # TODO: what if there is no parameter passed in?
    local __result="$(basename $(test -L ${1} && readlink ${1} || echo ${1}))"
    echo "${__result}"
}

# Custom logging to /var/logs/sysadmin.log.
# ${1} - the tag of the log entry, usually the file name
# ${2} - the message of the log entry
linfo () {
    # TODO: what if there is no arguments?
    # TODO: what if there is only one argument?
    # NOTE: isn't log ${0} "Your message goes here" - a better option?
    local __tag="$(__pcfn ${1})"
    shift
    logger -i -t ${__tag} -p local7.info ${@}
}

# Custom logging to /var/logs/sysadmin.log.
# ${1} - the tag of the log entry, usually the file name
# ${2} - the message of the log entry
ldebug () {
    # TODO: what if there is no arguments?
    # TODO: what if there is only one argument?
    # NOTE: isn't log ${0} "Your message goes here" - a better option?
    local __tag=$(__pcfn ${1})
    shift
    logger -i -t ${__tag} -p local7.debug ${@}
}

export __pcfn linfo ldebug

# PATHS ########################################################################
if [[ ${EUID} -ge 1000 ]]; then
    if [[ -d ${HOME}/.cargo/bin && -z $(echo ${PATH} | grep -o ${HOME}/.cargp/bin) ]]; then
        pathprepend ${HOME}/.cargo/bin
    fi
    if [[ -d ${HOME}/.bin && -z $(echo ${PATH} | grep -o ${HOME}/.bin) ]]; then
        pathprepend ${HOME}/.bin
    fi
    pathprepend .
fi

export PATH

## SCRIPTS #####################################################################
## BASHRC ----------------------------------------------------------------------
if [ -n "${BASH_VERSION}" ]; then
    if [ -f "${HOME}/.bashrc" ]; then
        . "${HOME}/.bashrc"
    fi
fi

## COLORS ######################################################################
if [ -f "${HOME}/.dir_colors" ]; then
    eval $(dircolors ${HOME}/.dir_colors)
fi

# EOF
# Ubuntu make installation of Go Lang
export GOROOT=/home/axl/Tools/go/go-lang:$GOROOT
PATH=/home/axl/Tools/go/go-lang/bin:$PATH

